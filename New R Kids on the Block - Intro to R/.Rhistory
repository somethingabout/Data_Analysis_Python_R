library(AER)
library(ivpack)
# ivreg(function | instrument, data)
hours_iv <-ivreg(hours ~ kidcount| samesex, data = labsup)
robust.se(hours_iv)
cor(select(labsup,kidcount, samesex))
source("~/Dropbox (Personal)/Pace/ECO585/PSets/Pset1/2023/ranswers.R", echo=TRUE)
source("~/Dropbox (Personal)/Pace/ECO585/PSets/Pset1/2023/ranswers.R", echo=TRUE)
reg4 <-lm(lrent ~ pctstu+ lpop+ltothsg+lrnthsg+lavginc+factor(year)+factor(city), data=rental)
summary(reg4)
reg2 <-lm(rent ~ enroll+ pop+tothsg+rnthsg+avginc+factor(year)+factor(city), data=rental)
summary(reg2)
reg4 <-lm(lrent ~ pctstu+ pop+ltothsg+lrnthsg+lavginc+factor(year)+factor(city), data=rental)
summary(reg4)
reg4 <-lm(rent ~ pctstu+ pop+ltothsg+lrnthsg+lavginc+factor(year)+factor(city), data=rental)
summary(reg4)
data(rental)
noenroll <- lm(rent ~pctstu+lpop+ltothsg+lrnthsg+lavginc+factor(year)+factor(city), data = rental)
summary(noenroll)
library(wooldridge)
library(dplyr)
data("rental")
RentalModel <- lm(log(rent)~enroll, data = rental)
summary(RentalModel)
# 1. I am regressing the number of students enrolled in college in the local vicinity on average rent (in dollars), the model is as follow: rent = β0 + β1enroll + u
ols1 <- lm(rent ~ enroll, data= rental)
summary(ols1)
# I am calling package wooldrige from the library
library(wooldridge)
# I am assigning rental data from tha package to the variable rentaldata
rentaldata <- data("rental")
# 1. I am regressing the number of students enrolled in college in the local vicinity on average rent (in dollars), the model is as follow: rent = β0 + β1enroll + u
ols1 <- lm(rent ~ enroll, data= rental)
summary(ols1)
# 5.I am removeing enroll and replacing it with pctstu, which is the percent of student population and running another regression
ols3 <- lm(rent ~ pctstu + ltothsg + lrnthsg + lavginc + year + city + lpop, data= rental)
summary(ols3)
#If you want to remove everything from memory
rm(list = ls())
library(wooldridge)
data(crime2)
summary(lm(crmrte ~ d87 + unem, crime2))
library(wooldridge)
#If you want to remove everything from memory
rm(list = ls())
library(wooldridge)
data(crime2)
summary(lm(crmrte ~ d87 + unem, crime2))
summarize(crime2$unem)
#If you want to remove everything from memory
rm(list = ls())
library(wooldridge)
data(crime2)
summary(lm(crmrte ~ d87 + unem, crime2))
summarize(crime2$unem, max)
#If you want to remove everything from memory
rm(list = ls())
library(wooldridge)
data(crime2)
summary(lm(crmrte ~ d87 + unem, crime2))
max(crime2$unem)
library(tidyverse)
library(AER)
crime2 =  crime2 %>% group_by(d87) %>% mutate(crmrte_diff = crmrte - lag(crmrte), cunem_diff = cunem - lag(cunem))
first_diff1 <-lm(crmrte_diff ~ cunem_diff, data = crime2)
summary(first_diff1)
# Here, we are calculating the difference in crimerate by "hand"
crmrte_diff = crime2$crmrte[crime2$d87==0] - crime2$crmrte[crime2$d87 == 1]
# Here, we are calculating the difference in unemployment rate by "hand"
cunem_diff = crime2$unem[crime2$d87==0] - crime2$unem[crime2$d87 == 1]
#let's run the simple regression of the differences between the two time periods on unem on crimerate
first_diff <-lm(crmrte_diff ~ cunem_diff)
summary(first_diff)
data("gpa3")
summary(lm(trmgpa~ spring+season+crsgpa+sat+hsperc, gpa3))
# we will use the package plm for panel data
plm(trmgpa~ spring+season+crsgpa+sat+hsperc, data = gpa3, index = c("id", "term"), model = "pooling")
library(plm)
data("gpa3")
summary(lm(trmgpa~ spring+season+crsgpa+sat+hsperc, gpa3))
# we will use the package plm for panel data
plm(trmgpa~ spring+season+crsgpa+sat+hsperc, data = gpa3, index = c("id", "term"), model = "pooling")
#notice that when we use the pooled ols model, the results are the same as using lm()
library(wooldridge)
data("mroz")
library(car)
library(AER)
library(tidyr)
library(wooldridge)
data("mroz")
library(car)
library(AER)
#recall this is just your ordinary ols estimation
lpm <- lm(inlf ~ nwifeinc +exper+ I(exper*exper)+mothereduc+age+kidslt6+kidsge6, data =mroz )
library(wooldridge)
data("mroz")
library(car)
library(AER)
#recall this is just your ordinary ols estimation
lpm <- lm(inlf ~ nwifeinc +exper+ I(exper*exper)+motheeduc+age+kidslt6+kidsge6, data =mroz )
library(wooldridge)
data("mroz")
library(car)
library(AER)
#recall this is just your ordinary ols estimation
lpm <- lm(inlf ~ nwifeinc +exper+ I(exper*exper)+motheduc+age+kidslt6+kidsge6, data =mroz )
lpm_robust <-coeftest(lpm, vcov = vcovHC, type = "HC0")
lpm_robust
probit <- glm(inlf ~nwifeinc +educ+ exper+ I(exper*exper)+age+kidslt6+kidsge6, data =mroz, family = binomial(link = "probit"))
summary(probit)
probit <- glm(inlf ~nwifeinc +exper+ I(exper*exper)+motheduc+age+kidslt6+kidsge6, data =mroz, family = binomial(link = "probit"))
summary(probit)
logit <- glm(inlf ~nwifeinc +educ+ exper+ I(exper*exper)+age+kidslt6+kidsge6, data =mroz , family = "binomial")
summary(logit)
logit <- glm(inlf ~nwifeinc +exper+ I(exper*exper)+motheduc+age+kidslt6+kidsge6, data =mroz , family = "binomial")
summary(logit)x
logit <- glm(inlf ~nwifeinc +exper+ I(exper*exper)+motheduc+age+kidslt6+kidsge6, data =mroz , family = "binomial")
summary(logit)
lpm_robust
library(margins)
lpm_robust
#calculate average marginal effects
logit_m <-margins(logit)
summary(logit_m)
probit_m <-margins(probit)
summary(probit_m)
#calculate PEA
lpm_robust
margins(logit, at = list(educ = c(mean(mroz$educ, na.rm=TRUE))), variables = "educ")
#calculate PEA
lpm_robust
margins(logit, at = list(motheduc = c(mean(mroz$motheduc, na.rm=TRUE))), variables = "educ")
#calculate PEA
lpm_robust
margins(logit, at = list(motheduc = c(mean(mroz$motheduc, na.rm=TRUE))), variables = "motheduc")
margins(probit, at = list(motheduc = c(mean(mroz$motheduc, na.rm=TRUE))), variables = "motheduc")
library(sjPlot)
library(ggplot2)
#here's educ
plot_model(logit, type = "pred", terms = "educ")
library(sjPlot)
library(ggplot2)
#here's educ
plot_model(logit, type = "pred", terms = "motheduc")
plot_model(probit, type = "pred", terms = "motheduc")
#here's experience (and note that this is a squared term)
plot_model(logit, type = "pred", terms = "exper")
library(sjPlot)
library(ggplot2)
#here's educ
plot_model(logit, type = "eff", terms = "motheduc")
plot_model(probit, type = "eff", terms = "motheduc")
#here's experience (and note that this is a squared term)
plot_model(logit, type = "int", terms = "exper")
library(sjPlot)
library(ggplot2)
#here's educ
plot_model(logit, type = "eff", terms = "motheduc")
plot_model(probit, type = "eff", terms = "motheduc")
#here's experience (and note that this is a squared term)
plot_model(logit, type = "eff", terms = "exper")
#https://stats.stackexchange.com/questions/10017/standard-error-clustering-in-r-either-manually-or-in-plm
require(plm)
require(lmtest)
both_con <- read_csv("/Users/mkaltenberg/Desktop/crime.csv")
#https://stats.stackexchange.com/questions/10017/standard-error-clustering-in-r-either-manually-or-in-plm
require(plm)
require(lmtest)
library(tidyr)
library(dpylr)
#https://stats.stackexchange.com/questions/10017/standard-error-clustering-in-r-either-manually-or-in-plm
require(plm)
require(lmtest)
library(tidyr)
library(dplyr)
both_con <- read_csv("/Users/mkaltenberg/Desktop/crime.csv")
#https://stats.stackexchange.com/questions/10017/standard-error-clustering-in-r-either-manually-or-in-plm
require(plm)
require(lmtest)
library(tidyr)
library(dplyr)
both_con <- read.csv("/Users/mkaltenberg/Desktop/crime.csv")
Cluster_County <- plm(log_crmrte ~ log(polpc) + log(density) + log(taxpc) + log(prbarr) + log(prbconv) + prbpris, effect="twoways", data = both_con, model="within")
#https://stats.stackexchange.com/questions/10017/standard-error-clustering-in-r-either-manually-or-in-plm
require(plm)
require(lmtest)
library(tidyr)
library(dplyr)
both_con <- read.csv("/Users/mkaltenberg/Desktop/crime.csv")
Cluster_County <- plm(log_crmrte ~ log(polpc) + log(density) + log(taxpc) + log(prbarr) + log(prbconv) + prbpris, effect="twoways", data = both_con, model="within")
#https://stats.stackexchange.com/questions/10017/standard-error-clustering-in-r-either-manually-or-in-plm
require(plm)
require(lmtest)
library(tidyr)
library(dplyr)
both_con <- read.csv("/Users/mkaltenberg/Desktop/crime.csv")
#https://stats.stackexchange.com/questions/10017/standard-error-clustering-in-r-either-manually-or-in-plm
require(plm)
require(lmtest)
library(tidyr)
library(dplyr)
both_con <- read.csv("/Users/mkaltenberg/Desktop/crime.csv")
Cluster_County <- plm(log_crmrte ~ log(polpc) + log(density) + log(taxpc) + log(prbarr) + log(prbconv) + prbpris, effect="twoways", data = both_con, model="within")
#https://stats.stackexchange.com/questions/10017/standard-error-clustering-in-r-either-manually-or-in-plm
require(plm)
require(lmtest)
library(tidyr)
library(dplyr)
both_con <- read.csv("/Users/mkaltenberg/Desktop/crime.csv")
Cluster_County <- plm(log(crmrte) ~ log(polpc) + log(density) + log(taxpc) + log(prbarr) + log(prbconv) + prbpris, effect="twoways", data = both_con, model="within")
#https://stats.stackexchange.com/questions/10017/standard-error-clustering-in-r-either-manually-or-in-plm
require(plm)
require(lmtest)
library(tidyr)
library(dplyr)
both_con <- read.csv("/Users/mkaltenberg/Desktop/crime.csv")
Cluster_County <- plm(crmrte ~ log(polpc) + log(density) + log(taxpc) + log(prbarr) + log(prbconv) + prbpris, effect="twoways", data = both_con, model="within")
#https://stats.stackexchange.com/questions/10017/standard-error-clustering-in-r-either-manually-or-in-plm
require(plm)
require(lmtest)
library(tidyr)
library(dplyr)
library(plm)
both_con <- read.csv("/Users/mkaltenberg/Desktop/crime.csv")
Cluster_County <- plm(crmrte ~ log(polpc) + log(density) + log(taxpc) + log(prbarr) + log(prbconv) + prbpris, effect="twoways", data = both_con, model="within")
#https://stats.stackexchange.com/questions/10017/standard-error-clustering-in-r-either-manually-or-in-plm
require(plm)
require(lmtest)
library(tidyr)
library(dplyr)
library(plm)
both_con <- read.csv("/Users/mkaltenberg/Desktop/crime.csv")
Cluster_County <- plm(crmrte ~ log(polpc) + density + taxpc + log(prbarr) + log(prbconv) + prbpris, effect="twoways", data = both_con, model="within")
#https://stats.stackexchange.com/questions/10017/standard-error-clustering-in-r-either-manually-or-in-plm
require(plm)
require(lmtest)
library(tidyr)
library(dplyr)
library(plm)
both_con <- read.csv("/Users/mkaltenberg/Desktop/crime.csv")
Cluster_County <- plm(crmrte ~ log(polpc) + density + taxpc + prbarr + prbconv + prbpris, effect="twoways", data = both_con, model="within")
G <- length(unique(both_con$county))
c <- G/(G-1)
se1 <-list(coeftest(Cluster_County, c * vcovHC(Cluster_County, type = "HC1", cluster = "group")))
stargazer(Cluster_County, se= se1, type = "text")
#https://stats.stackexchange.com/questions/10017/standard-error-clustering-in-r-either-manually-or-in-plm
require(plm)
require(lmtest)
library(tidyr)
library(dplyr)
library(plm)
library(stargazer)
both_con <- read.csv("/Users/mkaltenberg/Desktop/crime.csv")
Cluster_County <- plm(crmrte ~ log(polpc) + density + taxpc + prbarr + prbconv + prbpris, effect="twoways", data = both_con, model="within")
G <- length(unique(both_con$county))
c <- G/(G-1)
se1 <-list(coeftest(Cluster_County, c * vcovHC(Cluster_County, type = "HC1", cluster = "group")))
stargazer(Cluster_County, se= se1, type = "text")
#https://stats.stackexchange.com/questions/10017/standard-error-clustering-in-r-either-manually-or-in-plm
require(plm)
require(lmtest)
library(tidyr)
library(dplyr)
library(plm)
library(stargazer)
both_con <- read.csv("/Users/mkaltenberg/Desktop/crime.csv")
Cluster_County <- plm(crmrte ~ log(polpc) + density + taxpc + prbarr + c(prbconv) + prbpris, effect="twoways", data = both_con, model="within")
G <- length(unique(both_con$county))
c <- G/(G-1)
se1 <-list(coeftest(Cluster_County, c * vcovHC(Cluster_County, type = "HC1", cluster = "group")))
stargazer(Cluster_County, se= se1, type = "text")
#https://stats.stackexchange.com/questions/10017/standard-error-clustering-in-r-either-manually-or-in-plm
require(plm)
require(lmtest)
library(tidyr)
library(dplyr)
library(plm)
library(stargazer)
both_con <- read.csv("/Users/mkaltenberg/Desktop/crime.csv")
Cluster_County <- plm(crmrte ~ log(polpc) + density + taxpc + prbarr + numeric(prbconv) + prbpris, effect="twoways", data = both_con, model="within")
#https://stats.stackexchange.com/questions/10017/standard-error-clustering-in-r-either-manually-or-in-plm
require(plm)
require(lmtest)
library(tidyr)
library(dplyr)
library(plm)
library(stargazer)
both_con <- read.csv("/Users/mkaltenberg/Desktop/crime.csv")
Cluster_County <- plm(crmrte ~ log(polpc) + density + taxpc + prbarr + as.numeric(prbconv) + prbpris, effect="twoways", data = both_con, model="within")
G <- length(unique(both_con$county))
c <- G/(G-1)
se1 <-list(coeftest(Cluster_County, c * vcovHC(Cluster_County, type = "HC1", cluster = "group")))
stargazer(Cluster_County, se= se1, type = "text")
#https://stats.stackexchange.com/questions/10017/standard-error-clustering-in-r-either-manually-or-in-plm
require(plm)
require(lmtest)
library(tidyr)
library(dplyr)
library(plm)
library(stargazer)
both_con <- read.csv("/Users/mkaltenberg/Desktop/crime.csv")
Cluster_County <- plm(crmrte ~ log(polpc) + density + taxpc + prbarr + as.numeric(prbconv) + prbpris, effect="twoways", data = both_con, model="within")
G <- length(unique(both_con$county))
N <- length(both_con$county)
dfa <- (G/(G-1)) * (N-1)/Cluster_County$df.residual
se1 <-list(dfa*vcovHC(Cluster_County, type = "HC1", cluster = "group", adjust = T)
#https://stats.stackexchange.com/questions/10017/standard-error-clustering-in-r-either-manually-or-in-plm
require(plm)
require(lmtest)
library(tidyr)
library(dplyr)
library(plm)
library(stargazer)
both_con <- read.csv("/Users/mkaltenberg/Desktop/crime.csv")
Cluster_County <- plm(crmrte ~ log(polpc) + density + taxpc + prbarr + as.numeric(prbconv) + prbpris, effect="twoways", data = both_con, model="within")
G <- length(unique(both_con$county))
N <- length(both_con$county)
dfa <- (G/(G-1)) * (N-1)/Cluster_County$df.residual
se1 <-list(dfa*vcovHC(Cluster_County, type = "HC0", cluster = "group", adjust = T)
#https://stats.stackexchange.com/questions/10017/standard-error-clustering-in-r-either-manually-or-in-plm
require(plm)
require(lmtest)
library(tidyr)
library(dplyr)
library(plm)
library(stargazer)
both_con <- read.csv("/Users/mkaltenberg/Desktop/crime.csv")
Cluster_County <- plm(crmrte ~ log(polpc) + density + taxpc + prbarr + as.numeric(prbconv) + prbpris, effect="twoways", data = both_con, model="within")
G <- length(unique(both_con$county))
N <- length(both_con$county)
dfa <- (G/(G-1)) * (N-1)/Cluster_County$df.residual
se1 <-list(dfa*vcovHC(Cluster_County, type = "HC1", cluster = "group", adjust = T))
stargazer(Cluster_County, se= se1, type = "text")
library(readxl)
Seq98 <- read_stata("/Users/mkaltenberg/Dropbox (Personal)/Pace/ECO585/PSets/PSet3/2022/113772-V1/AEJ/Seq98.dta")
Seq98 <- read_dta("/Users/mkaltenberg/Dropbox (Personal)/Pace/ECO585/PSets/PSet3/2022/113772-V1/AEJ/Seq98.dta")
library(haven)
library(readxl)
Seq98 <- read_dta("/Users/mkaltenberg/Dropbox (Personal)/Pace/ECO585/PSets/PSet3/2022/113772-V1/AEJ/Seq98.dta")
View(Seq98)
library(ggplot2)
library(dplyr)
install.packages("margins")
library(margins)
library(plm)
ggplot(data = maindata, aes(x = ln_avwage, y = netprofit, color = netprofit)) +
geom_line() +
labs(title = "Profit and Wages over Time",
x = "Net Profit",
y = "Average wage, logged")
install.packages("margins")
library(ggplot2)
library(dplyr)
#install.packages("margins")
library(margins)
library(plm)
ggplot(data = maindata, aes(x = ln_avwage, y = netprofit, color = netprofit)) +
geom_line() +
labs(title = "Profit and Wages over Time",
x = "Net Profit",
y = "Average wage, logged")
library(ggplot2)
library(dplyr)
#install.packages("margins")
library(margins)
library(plm)
ggplot(data = seq98, aes(x = ln_avwage, y = netprofit, color = netprofit)) +
geom_line() +
labs(title = "Profit and Wages over Time",
x = "Net Profit",
y = "Average wage, logged")
library(readxl)
Seq98 <- read_dta("/Users/mkaltenberg/Dropbox (Personal)/Pace/ECO585/PSets/PSet3/2022/113772-V1/AEJ/Seq98.dta")
View(Seq98)
library(ggplot2)
library(dplyr)
#install.packages("margins")
library(margins)
library(plm)
ggplot(data = Seq98, aes(x = ln_avwage, y = netprofit, color = netprofit)) +
geom_line() +
labs(title = "Profit and Wages over Time",
x = "Net Profit",
y = "Average wage, logged")
"Question 2 part 2"
# Assuming 'data' is your dataset, 'treatment' is the treatment indicator, and 'outcome' is the outcome variable
library(dplyr)
# Calculate Average Treatment Effect (ATE)
avgTE <- maindata %>%
summarise(avgTE = mean(maindata$avwage[ctreat1 == 1]) - mean(maindata$avgwage[ctreat1 == 0]))
library(readxl)
maindata <- read_dta("/Users/mkaltenberg/Dropbox (Personal)/Pace/ECO585/PSets/PSet3/2022/113772-V1/AEJ/Seq98.dta")
library(ggplot2)
library(dplyr)
#install.packages("margins")
library(margins)
library(plm)
ggplot(data = maindata, aes(x = ln_avwage, y = netprofit, color = netprofit)) +
geom_line() +
labs(title = "Profit and Wages over Time",
x = "Net Profit",
y = "Average wage, logged")
"Question 2 part 2"
# Assuming 'data' is your dataset, 'treatment' is the treatment indicator, and 'outcome' is the outcome variable
library(dplyr)
# Calculate Average Treatment Effect (ATE)
avgTE <- maindata %>%
summarise(avgTE = mean(maindata$avwage[ctreat1 == 1]) - mean(maindata$avgwage[ctreat1 == 0]))
"Time series of Profits"
ggplot(data = maindata, aes(x = year, y = netprofit, color = "Net Profits")) +
stat_summary(fun = mean, geom = "line", size = 1) +
labs(title = "Profit Over Time",
x = "Time",
y = "Net Profits")
library(readxl)
maindata <- read_csv("/Users/mkaltenberg/Dropbox (Personal)/Pace/ECO585/PSets/PSet3/2022/113772-V1/AEJ/maindata.csv")
library(readxl)
maindata <- read.csv("/Users/mkaltenberg/Dropbox (Personal)/Pace/ECO585/PSets/PSet3/2022/113772-V1/AEJ/maindata.csv")
library(ggplot2)
library(dplyr)
#install.packages("margins")
library(margins)
library(plm)
ggplot(data = maindata, aes(x = ln_avwage, y = netprofit, color = netprofit)) +
geom_line() +
labs(title = "Profit and Wages over Time",
x = "Net Profit",
y = "Average wage, logged")
"Question 2 part 2"
# Assuming 'data' is your dataset, 'treatment' is the treatment indicator, and 'outcome' is the outcome variable
library(dplyr)
# Calculate Average Treatment Effect (ATE)
avgTE <- maindata %>%
summarise(avgTE = mean(maindata$avwage[ctreat1 == 1]) - mean(maindata$avgwage[ctreat1 == 0]))
# Calculate Average Treatment Effect on the Treated (ATET)
avgTET <- maindata %>%
filter(maindata$avwage == 1) %>%
summarise(avgTET = mean(avwage))
# Print the results
print(avgTE)
print(avgTET)
"Time series of Profits"
ggplot(data = maindata, aes(x = year, y = netprofit, color = "Net Profits")) +
stat_summary(fun = mean, geom = "line", size = 1) +
labs(title = "Profit Over Time",
x = "Time",
y = "Net Profits")
"Sample mean"
means <- maindata %>%
group_by(ctreat1, NMW) %>%
summarise(netprofit = mean(netprofit, na.rm = TRUE))
print(means_summary)
pcmi,t = β0+β1create1t+β2(ctreat1t×NMWt)+β3yeart+β4grad2+β5unionmem+β6ptwk+β7femaleβjsic2+βkgorwk
install.packages(c("AER", "askpass", "backports", "bayestestR", "bdsmatrix", "BH", "bit", "blob", "BMisc", "boot", "brew", "brio", "broom", "bslib", "cachem", "callr", "car", "carData", "checkmate", "class", "classInt", "cli", "clipr", "clubSandwich", "cluster", "codetools", "colorspace", "commonmark", "conquer", "corrplot", "covr", "cowplot", "cpp11", "crayon", "credentials", "crosstalk", "curl", "data.table", "datawizard", "DBI", "dbplyr", "DEoptimR", "desc", "devtools", "did", "diffobj", "digest", "dplyr", "DRDID", "dreamerr", "DT", "e1071", "effectsize", "estimatr", "evaluate", "expm", "fansi", "farver", "fastmap", "fixest", "fontawesome", "foreign", "Formula", "fs", "gargle", "gdata", "generics", "gert", "ggcorrplot", "ggeffects", "ggplot2", "ggpubr", "ggrepel", "ggsci", "ggsignif", "gh", "git2r", "gitcreds", "glue", "gmodels", "googledrive", "googlesheets4", "gtable", "gtools", "haven", "highr", "htmltools", "htmlwidgets", "httpuv", "httr", "insight", "IRdisplay", "IRkernel", "isoband", "jquerylib", "jsonlite", "kableExtra", "KernSmooth", "knitr", "labeling", "labelled", "later", "lattice", "lifecycle", "lme4", "lmtest", "lubridate", "magick", "margins", "markdown", "MASS", "MatchIt", "Matrix", "MatrixModels", "matrixStats", "maxLik", "mgcv", "mime", "minqa", "miscTools", "modelsummary", "munsell", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "pander", "parameters", "patchwork", "pbapply", "pbdZMQ", "performance", "pkgbuild", "pkgload", "plm", "plyr", "polynom", "prettyunits", "processx", "progress", "promises", "proxy", "pryr", "ps", "purrr", "QuantPsyc", "quantreg", "questionr", "R.cache", "R.methodsS3", "R.oo", "R.utils", "R6", "ragg", "rapportools", "rbibutils", "rcmdcheck", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "Rdpack", "readr", "readxl", "rematch", "remotes", "repr", "reprex", "reshape", "rex", "rio", "rJava", "RJSONIO", "rlang", "rmarkdown", "robustbase", "roxygen2", "rpart", "rprojroot", "rstatix", "rstudioapi", "rversions", "rvest", "sandwich", "sass", "scales", "sessioninfo", "shiny", "sjlabelled", "sjPlot", "sjstats", "snakecase", "sourcetools", "sp", "spatial", "stargazer", "statmod", "stringi", "stringr", "styler", "summarytools", "survival", "svglite", "sys", "systemfonts", "tables", "testthat", "textshaping", "tidyr", "tidyselect", "tidytuesdayR", "tidyverse", "timechange", "tinytex", "tzdb", "usethis", "utf8", "uuid", "vctrs", "viridisLite", "vroom", "vtable", "waldo", "WDI", "webshot", "whisker", "withr", "wooldridge", "xfun", "xml2", "yaml", "zip", "zoo"))
setwd('/Users/mkaltenberg/Documents/GitHub/Data_Analysis_Python_R/New R Kids on the Block/')
setwd('/Users/mkaltenberg/Documents/GitHub/Data_Analysis_Python_R/New R Kids on the Block - Intro to R/')
```
setwd('/Users/mkaltenberg/Documents/GitHub/Data_Analysis_Python_R/New R Kids on the Block - Intro to R/')
```{r}
```{r}
library(dplyr)
```{r}
```{r}
```{r}
jobs_r <- read.csv('job-automation-probability.csv')
R
filter(jobs, prob >.8)
jobs <- jobs_r
filter(jobs, prob >.8)
filter(jobs, education == 'High school diploma or equivalent')
transmute(jobs,
diff = avg_ann_wage - median_ann_wage)
diffcolumn <- transmute(jobs,
diff = avg_ann_wage - median_ann_wage)
diffcolumn <- transmute(jobs,
diff = average_ann_wage - median_ann_wage)
View(diffcolumn)
View(diffcolumn)
jobs2 <- mutate(jobs,
diff = avg_ann_wage - median_ann_wage)
jobs2 <- mutate(jobs,
diff = average_ann_wage - median_ann_wage)
View(jobs2)
View(jobs2)
jobs %>% filter(occupation %in% c('Economists')) %>% mutate(
diff = avg_ann_wage - median_ann_wage)
jobs %>% filter(occupation %in% c('Economists')) %>% mutate(
diff = avgerage_ann_wage - median_ann_wage)
jobs %>% filter(occupation %in% c('Economists')) %>% mutate(
diff = average_ann_wage - median_ann_wage)
econ <- jobs %>% filter(occupation %in% c('Economists')) %>% mutate(
diff = average_ann_wage - median_ann_wage)
View(econ)
by_educ <- group_by(jobs, education)
educ_wage <-summarise(by_educ, av_wage_educ = mean(average_ann_wage, na.rm=TRUE),
count = n())
View(by_educ)
View(educ_wage)
View(educ_wage)
by_educ <- group_by(jobs, education)
educ_wage <-summarise(by_educ, av_wage_educ = mean(average_ann_wage, na.rm=TRUE),
count = n())
by_educ <- group_by(jobs, education) #Create another dataframe by education group
educ_emp <-summarise(by_educ, Nemp = sum(numbEmployed, na.rm=TRUE)) # That contains the number of
View(educ_emp)
View(educ_emp)
View(educ_wage)
View(educ_wage)
left_join(educ_emp,educ_wage, by= c("education"))
merge_educ <- left_join(educ_emp,educ_wage, by= c("education"))
View(merge_educ)
View(merge_educ)
